syntax = "proto3";

package greet;
option go_package="greetpb";

message Greeting {
    string first_name = 1;
    string last_name = 2;
}

message GreetRequest {
    Greeting greeting = 1;
}

message GreetResponse {
    string result = 1;
}



message GreetManyTimesRequest {
    Greeting greeting = 1;
}

message GreetManyTimesResponse {
    string result = 1;
}

message LongGreetRequest {
    Greeting greeting = 1;
}

message LongGreetResponse {
    string result = 1;
}

message GreetEveryoneRequest {
    Greeting greeting = 1;
}

message GreetEveryoneResponse {
    string result = 1;
}

message GreetWithDeadlineRequest {
    Greeting greeting = 1;
}

message GreetWithDeadlineResponse {
    string result = 1;
}

message GreetWithErrorHandlingRequest {
    Greeting greeting = 1;
}

message GreetWithErrorHandlingResponse {
    string result = 1;
}

service GreetService {
    // Unary Call
    rpc Greet(GreetRequest) returns (GreetResponse){};

    // Server Streaming Call
    rpc GreetManyTimes(GreetManyTimesRequest) returns (stream GreetManyTimesResponse){};

    // Client Streaming Call
    rpc LonGreet(stream LongGreetRequest) returns (LongGreetResponse){};

    // Bi-rectional Streaming Call
    rpc GreetEveryone (stream GreetEveryoneRequest) returns (stream GreetEveryoneResponse){};

    // Deadline
    // Seting client deadline (timeout)
    rpc GreetWithDeadline (GreetWithDeadlineRequest) returns (GreetWithDeadlineResponse){};

    // error handling
    // This RPC throw an exception if the first_name or last_name is empty
    // The error being sent is of type INAVLID_ARGUMENT
    rpc GreetWithErrorHandling (GreetWithErrorHandlingRequest) returns (GreetWithErrorHandlingResponse){};

} 